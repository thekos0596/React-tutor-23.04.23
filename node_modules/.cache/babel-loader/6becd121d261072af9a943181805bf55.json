{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/\\xA0\\xA0GoItCourses/GitHub/React totur/blended-lesson/src/tabs/Gallery.jsx\";\nimport { Component } from 'react';\nimport * as ImageService from 'service/image-service';\nimport { Button, SearchForm, Grid, GridItem, Text, CardItem } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Gallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: '',\n      page: 1,\n      isLoading: false,\n      isShowButton: false,\n      photo: []\n    };\n\n    this.handleSubmit = q => {\n      this.setState({\n        query: q,\n        photo: [],\n        page: 1\n      });\n    };\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      query,\n      page\n    } = this.state;\n\n    if (prevState.query !== query || prevState.page !== page) {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        photos,\n        page: currentPage,\n        per_page,\n        total_results\n      } = await ImageService.getImages(query, page);\n      this.setState(prevState => ({\n        photo: [...prevState.photo, ...photos],\n        isShowButton: currentPage < Math.ceil(total_results / per_page)\n      }));\n    }\n  }\n\n  render() {\n    const {\n      photo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: photo.length > 0 && photo.map(_ref => {\n          let {\n            id,\n            avg_color,\n            alt,\n            src: {\n              large\n            }\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(GridItem, {\n            children: /*#__PURE__*/_jsxDEV(CardItem, {\n              color: avg_color,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: large,\n                alt: alt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), photo.length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        children: \"Sorry. There are no images ... \\uD83D\\uDE2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Documents/Â Â GoItCourses/GitHub/React totur/blended-lesson/src/tabs/Gallery.jsx"],"names":["Component","ImageService","Button","SearchForm","Grid","GridItem","Text","CardItem","Gallery","state","query","page","isLoading","isShowButton","photo","handleSubmit","q","setState","componentDidUpdate","prevProps","prevState","photos","currentPage","per_page","total_results","getImages","Math","ceil","render","length","map","id","avg_color","alt","src","large"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,KAAKC,YAAZ,MAA8B,uBAA9B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmDC,QAAnD,QAAmE,YAAnE;;;AAEA,OAAO,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;AAAA,SACrCS,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,SAAS,EAAE,KAHL;AAINC,MAAAA,YAAY,EAAE,KAJR;AAKNC,MAAAA,KAAK,EAAE;AALD,KAD6B;;AAAA,SA2BrCC,YA3BqC,GA2BtBC,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM,CAAT;AAAYF,QAAAA,KAAK,EAAE,EAAnB;AAAuBH,QAAAA,IAAI,EAAE;AAA7B,OAAd;AACD,KA7BoC;AAAA;;AASb,QAAlBO,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC7C,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;;AACA,QAAIW,SAAS,CAACV,KAAV,KAAoBA,KAApB,IAA6BU,SAAS,CAACT,IAAV,KAAmBA,IAApD,EAA0D;AACxD,WAAKM,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM;AACJS,QAAAA,MADI;AAEJV,QAAAA,IAAI,EAAEW,WAFF;AAGJC,QAAAA,QAHI;AAIJC,QAAAA;AAJI,UAKF,MAAMvB,YAAY,CAACwB,SAAb,CAAuBf,KAAvB,EAA8BC,IAA9B,CALV;AAOA,WAAKM,QAAL,CAAcG,SAAS,KAAK;AAC1BN,QAAAA,KAAK,EAAE,CAAC,GAAGM,SAAS,CAACN,KAAd,EAAqB,GAAGO,MAAxB,CADmB;AAE1BR,QAAAA,YAAY,EAAES,WAAW,GAAGI,IAAI,CAACC,IAAL,CAAUH,aAAa,GAAGD,QAA1B;AAFF,OAAL,CAAvB;AAID;AACF;;AAMDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,wBACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKM;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,kBACGD,KAAK,CAACe,MAAN,GAAe,CAAf,IACCf,KAAK,CAACgB,GAAN,CAAU;AAAA,cAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,SAAN;AAAiBC,YAAAA,GAAjB;AAAsBC,YAAAA,GAAG,EAAE;AAAEC,cAAAA;AAAF;AAA3B,WAAD;AAAA,8BACR,QAAC,QAAD;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEH,SAAjB;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEG,KAAV;AAAiB,gBAAA,GAAG,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAAeF,EAAf;AAAA;AAAA;AAAA;AAAA,kBADQ;AAAA,SAAV;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF,EAYGjB,KAAK,CAACe,MAAN,KAAiB,CAAjB,iBACC,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA,oBADF;AAkBD;;AAnDoC","sourcesContent":["import { Component } from 'react';\n\nimport * as ImageService from 'service/image-service';\nimport { Button, SearchForm, Grid, GridItem, Text, CardItem } from 'components';\n\nexport class Gallery extends Component {\n  state = {\n    query: '',\n    page: 1,\n    isLoading: false,\n    isShowButton: false,\n    photo: [],\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { query, page } = this.state;\n    if (prevState.query !== query || prevState.page !== page) {\n      this.setState({ isLoading: true });\n      const {\n        photos,\n        page: currentPage,\n        per_page,\n        total_results,\n      } = await ImageService.getImages(query, page);\n\n      this.setState(prevState => ({\n        photo: [...prevState.photo, ...photos],\n        isShowButton: currentPage < Math.ceil(total_results / per_page),\n      }));\n    }\n  }\n\n  handleSubmit = q => {\n    this.setState({ query: q, photo: [], page: 1 });\n  };\n\n  render() {\n    const { photo } = this.state;\n    return (\n      <>\n        <SearchForm onSubmit={this.handleSubmit} />\n        <Grid>\n          {photo.length > 0 &&\n            photo.map(({ id, avg_color, alt, src: { large } }) => (\n              <GridItem key={id}>\n                <CardItem color={avg_color}>\n                  <img src={large} alt={alt} />\n                </CardItem>\n              </GridItem>\n            ))}\n        </Grid>\n        {photo.length === 0 && (\n          <Text textAlign=\"center\">Sorry. There are no images ... ðŸ˜­</Text>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}